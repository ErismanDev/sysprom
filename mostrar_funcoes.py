#!/usr/bin/env python
"""
Script para mostrar onde est√£o as fun√ß√µes e como acess√°-las
"""
import os
import sys
import django

# Configurar o Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'sepromcbmepi.settings')
django.setup()

from django.contrib.auth.models import User
from militares.models import UsuarioFuncao

def mostrar_funcoes():
    """Mostra onde est√£o as fun√ß√µes e como acess√°-las"""
    
    print("üîç ONDE EST√ÉO AS FUN√á√ïES?")
    print("=" * 60)
    
    # 1. No banco de dados
    print("üìä 1. NO BANCO DE DADOS:")
    print("   - Tabela: militares_usuariofuncao")
    print("   - Modelo: UsuarioFuncao")
    print("   - Localiza√ß√£o: db.sqlite3")
    
    # 2. Contar fun√ß√µes
    total_funcoes = UsuarioFuncao.objects.count()
    print(f"\nüìà 2. ESTAT√çSTICAS:")
    print(f"   - Total de fun√ß√µes: {total_funcoes}")
    
    # 3. Fun√ß√µes por tipo
    print(f"\nüìã 3. FUN√á√ïES POR TIPO:")
    tipos = UsuarioFuncao.objects.values_list('tipo_funcao', flat=True).distinct()
    for tipo in tipos:
        count = UsuarioFuncao.objects.filter(tipo_funcao=tipo).count()
        print(f"   - {tipo}: {count} fun√ß√µes")
    
    # 4. Fun√ß√µes de comiss√£o
    print(f"\nüéñÔ∏è  4. FUN√á√ïES DE COMISS√ÉO:")
    
    # CPO
    funcoes_cpo = UsuarioFuncao.objects.filter(nome_funcao__icontains='CPO').order_by('nome_funcao')
    print(f"\n   Comiss√£o de Promo√ß√µes de Oficiais (CPO):")
    for funcao in funcoes_cpo:
        print(f"     ‚úÖ {funcao.nome_funcao}")
    
    # CPP
    funcoes_cpp = UsuarioFuncao.objects.filter(nome_funcao__icontains='CPP').order_by('nome_funcao')
    print(f"\n   Comiss√£o de Promo√ß√µes de Pra√ßas (CPP):")
    for funcao in funcoes_cpp:
        print(f"     ‚úÖ {funcao.nome_funcao}")
    
    # 5. Como acessar no sistema
    print(f"\nüåê 5. COMO ACESSAR NO SISTEMA:")
    print("   - URL: http://127.0.0.1:8000/militares/usuarios/")
    print("   - Selecione um usu√°rio")
    print("   - Clique em 'Gerenciar Fun√ß√µes'")
    print("   - Adicione as fun√ß√µes desejadas")
    
    # 6. Como acessar via admin
    print(f"\n‚öôÔ∏è  6. VIA ADMIN DO DJANGO:")
    print("   - URL: http://127.0.0.1:8000/admin/")
    print("   - Login: erisman / sua_senha")
    print("   - Se√ß√£o: Militares > Fun√ß√µes dos Usu√°rios")
    
    # 7. Como acessar via c√≥digo
    print(f"\nüíª 7. VIA C√ìDIGO PYTHON:")
    print("   from militares.models import UsuarioFuncao")
    print("   funcoes = UsuarioFuncao.objects.all()")
    print("   for funcao in funcoes:")
    print("       print(funcao.nome_funcao)")
    
    # 8. Mostrar todas as fun√ß√µes
    print(f"\nüìù 8. TODAS AS FUN√á√ïES DISPON√çVEIS:")
    todas_funcoes = UsuarioFuncao.objects.all().order_by('tipo_funcao', 'nome_funcao')
    
    tipos_agrupados = {}
    for funcao in todas_funcoes:
        tipo = funcao.get_tipo_funcao_display()
        if tipo not in tipos_agrupados:
            tipos_agrupados[tipo] = []
        tipos_agrupados[tipo].append(funcao.nome_funcao)
    
    for tipo, funcoes in tipos_agrupados.items():
        print(f"\n   {tipo}:")
        for funcao in funcoes:
            print(f"     - {funcao}")
    
    return True

if __name__ == '__main__':
    sucesso = mostrar_funcoes()
    
    print("\n" + "=" * 60)
    if sucesso:
        print("‚úÖ Informa√ß√µes exibidas com sucesso!")
        print("\nüìù RESUMO:")
        print("   - As fun√ß√µes est√£o no banco de dados")
        print("   - Podem ser acessadas via sistema web")
        print("   - Podem ser gerenciadas via admin do Django")
        print("   - Podem ser acessadas via c√≥digo Python")
    else:
        print("‚ùå Erro ao exibir informa√ß√µes!") 