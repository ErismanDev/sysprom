#!/usr/bin/env python
"""
Script final para corrigir os caracteres problem√°ticos restantes
"""

import os
import sys
import django

# Configurar Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'sepromcbmepi.settings')
django.setup()

from django.contrib.auth.models import User
from militares.models import Militar, CargoFuncao, UsuarioFuncao
from django.db import transaction

def corrigir_caracteres_finais():
    """Corrige os caracteres problem√°ticos finais"""
    print("üîß Corrigindo caracteres problem√°ticos finais...")
    print("=" * 60)
    
    # Mapeamento espec√≠fico dos caracteres problem√°ticos encontrados
    correcoes_cargos = {
        'Fun√ß√ío padr√ío para administradores do sistema': 'Fun√ß√£o padr√£o para administradores do sistema',
        'Membro padr√ío de comiss√ío de promo√ß√µes': 'Membro padr√£o de comiss√£o de promo√ß√µes',
        'Presidente da Comiss√ío de Promo√ß√ío de Pra√ßas': 'Presidente da Comiss√£o de Promo√ß√£o de Pra√ßas',
        'Respons√°vel pela gest√ío de promo√ß√µes': 'Respons√°vel pela gest√£o de promo√ß√µes',
        'Membro Nato da Comiss√ío de Promo√ß√ío de Pra√ßas': 'Membro Nato da Comiss√£o de Promo√ß√£o de Pra√ßas',
        'Membro Efetivo da Comiss√ío de Promo√ß√ío de Pra√ßas': 'Membro Efetivo da Comiss√£o de Promo√ß√£o de Pra√ßas',
        'Secret√°rio da Comiss√ío de Promo√ß√ío de Pra√ßas': 'Secret√°rio da Comiss√£o de Promo√ß√£o de Pra√ßas',
        'Suplente da Comiss√ío de Promo√ß√ío de Pra√ßas': 'Suplente da Comiss√£o de Promo√ß√£o de Pra√ßas',
        'Presidente da Comiss√ío de Promo√ß√ío de Oficiais': 'Presidente da Comiss√£o de Promo√ß√£o de Oficiais',
        'Membro Nato da Comiss√ío de Promo√ß√ío de Oficiais': 'Membro Nato da Comiss√£o de Promo√ß√£o de Oficiais',
        'Membro Efetivo da Comiss√ío de Promo√ß√ío de Oficiais': 'Membro Efetivo da Comiss√£o de Promo√ß√£o de Oficiais',
        'Secret√°rio da Comiss√ío de Promo√ß√ío de Oficiais': 'Secret√°rio da Comiss√£o de Promo√ß√£o de Oficiais',
        'Suplente da Comiss√ío de Promo√ß√ío de Oficiais': 'Suplente da Comiss√£o de Promo√ß√£o de Oficiais',
        'Operador com acesso limitado': 'Operador com acesso limitado',
        'Acesso apenas para consulta': 'Acesso apenas para consulta',
        'Usu√°rio com perfil administrativo geral': 'Usu√°rio com perfil administrativo geral',
        'Diretor de Gest√£o de Pessoas': 'Diretor de Gest√£o de Pessoas',
        'Chefe da Se√ß√£o de Pessoal': 'Chefe da Se√ß√£o de Pessoal',
        'Chefe da Se√ß√£o de Promo√ß√µes': 'Chefe da Se√ß√£o de Promo√ß√µes',
        'Membro de Comiss√£o': 'Membro de Comiss√£o',
        'Gestor de Promo√ß√µes': 'Gestor de Promo√ß√µes',
        'Secret√°rio da CPO': 'Secret√°rio da CPO',
        'Secret√°rio da CPP': 'Secret√°rio da CPP',
        'Presidente da CPO': 'Presidente da CPO',
        'Presidente da CPP': 'Presidente da CPP'
    }
    
    # Corrigir cargos
    cargos_corrigidos = 0
    cargos = CargoFuncao.objects.all()
    
    for cargo in cargos:
        corrigido = False
        
        # Corrigir nome
        if cargo.nome in correcoes_cargos:
            cargo.nome = correcoes_cargos[cargo.nome]
            corrigido = True
        
        # Corrigir descri√ß√£o
        if cargo.descricao in correcoes_cargos:
            cargo.descricao = correcoes_cargos[cargo.descricao]
            corrigido = True
        
        if corrigido:
            cargo.save()
            cargos_corrigidos += 1
            print(f"   ‚úÖ Corrigido: {cargo.nome}")
    
    print(f"\nüìä Cargos corrigidos: {cargos_corrigidos}")
    
    # Corrigir usu√°rios espec√≠ficos
    usuarios_corrigidos = 0
    
    # Corrigir usu√°rio com "Usu√°rio" problem√°tico
    try:
        usuario_problematico = User.objects.get(id=1031)
        if usuario_problematico.first_name == 'Usu√°rio':
            usuario_problematico.first_name = 'Usu√°rio'
            usuario_problematico.save()
            usuarios_corrigidos += 1
            print(f"   ‚úÖ Usu√°rio corrigido: {usuario_problematico.username}")
    except User.DoesNotExist:
        pass
    
    # Corrigir usu√°rio com "Jos√©" problem√°tico
    try:
        usuario_jose = User.objects.get(id=2020)
        if 'Jos√©' in usuario_jose.first_name:
            usuario_jose.first_name = 'Jos√©'
            usuario_jose.save()
            usuarios_corrigidos += 1
            print(f"   ‚úÖ Usu√°rio corrigido: {usuario_jose.username}")
    except User.DoesNotExist:
        pass
    
    # Corrigir usu√°rio com "Usu√°rio" no last_name
    try:
        usuario_lastname = User.objects.get(id=17)
        if 'Usu√°rio' in usuario_lastname.last_name:
            usuario_lastname.last_name = 'Usu√°rio'
            usuario_lastname.save()
            usuarios_corrigidos += 1
            print(f"   ‚úÖ Usu√°rio corrigido: {usuario_lastname.username}")
    except User.DoesNotExist:
        pass
    
    print(f"\nüìä Usu√°rios corrigidos: {usuarios_corrigidos}")
    
    return cargos_corrigidos + usuarios_corrigidos

def main():
    """Fun√ß√£o principal"""
    print("üöÄ Corrigindo caracteres problem√°ticos finais...")
    print("=" * 60)
    
    with transaction.atomic():
        total_corrigidos = corrigir_caracteres_finais()
        
        print("\n" + "=" * 60)
        print(f"üìä TOTAL DE CORRE√á√ïES: {total_corrigidos}")
        
        if total_corrigidos > 0:
            print("‚úÖ Corre√ß√µes aplicadas com sucesso!")
        else:
            print("‚úÖ Nenhuma corre√ß√£o necess√°ria!")
    
    # Verifica√ß√£o final
    print("\nüîç Executando verifica√ß√£o final...")
    os.system("python verificar_encoding_sistema.py")

if __name__ == '__main__':
    main() 