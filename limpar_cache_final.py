#!/usr/bin/env python
"""
Script para limpar cache e for√ßar atualiza√ß√£o das views
"""

import os
import sys
import django

# Configurar Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'sepromcbmepi.settings')
django.setup()

from django.core.cache import cache
from django.core.management import call_command

def limpar_cache_final():
    """Limpa cache e for√ßa atualiza√ß√£o"""
    
    print("üßπ LIMPANDO CACHE E FOR√áANDO ATUALIZA√á√ÉO")
    print("=" * 60)
    
    # 1. Limpar cache do Django
    print("1Ô∏è‚É£ Limpando cache do Django...")
    cache.clear()
    print("   ‚úÖ Cache limpo!")
    
    # 2. Coletar arquivos est√°ticos
    print("2Ô∏è‚É£ Coletando arquivos est√°ticos...")
    try:
        call_command('collectstatic', '--noinput', verbosity=0)
        print("   ‚úÖ Arquivos est√°ticos coletados!")
    except Exception as e:
        print(f"   ‚ö†Ô∏è Erro ao coletar est√°ticos: {e}")
    
    # 3. Verificar dados no banco
    print("3Ô∏è‚É£ Verificando dados no banco...")
    from militares.models import AlmanaqueMilitar, QuadroAcesso, QuadroFixacaoVagas
    
    total_almanaques = AlmanaqueMilitar.objects.filter(ativo=True).count()
    total_quadros_acesso = QuadroAcesso.objects.count()
    total_quadros_fixacao = QuadroFixacaoVagas.objects.count()
    
    print(f"   ‚Ä¢ Almanaques ativos: {total_almanaques}")
    print(f"   ‚Ä¢ Quadros de acesso: {total_quadros_acesso}")
    print(f"   ‚Ä¢ Quadros de fixa√ß√£o: {total_quadros_fixacao}")
    
    # 4. Verificar usu√°rio admin
    print("4Ô∏è‚É£ Verificando usu√°rio admin...")
    from django.contrib.auth.models import User
    try:
        user_admin = User.objects.get(username='erisman')
        print(f"   ‚úÖ Usu√°rio encontrado: {user_admin.username}")
        print(f"   ‚Ä¢ is_superuser: {user_admin.is_superuser}")
        print(f"   ‚Ä¢ is_staff: {user_admin.is_staff}")
    except User.DoesNotExist:
        print("   ‚ùå Usu√°rio 'erisman' n√£o encontrado")
    
    # 5. Verificar fun√ß√µes do usu√°rio
    print("5Ô∏è‚É£ Verificando fun√ß√µes do usu√°rio...")
    from militares.models import UsuarioFuncao
    funcoes = UsuarioFuncao.objects.filter(usuario=user_admin, status='ATIVO')
    
    if funcoes.exists():
        for funcao in funcoes:
            print(f"   ‚Ä¢ {funcao.cargo_funcao.nome}")
    else:
        print("   ‚ùå Nenhuma fun√ß√£o ativa encontrada")
    
    # 6. Conclus√£o
    print("6Ô∏è‚É£ CONCLUS√ÉO:")
    print("   üéØ Todas as views foram corrigidas para incluir superusu√°rios!")
    print("   üìã Agora voc√™ deve conseguir ver:")
    
    if total_almanaques > 0:
        print("   ‚úÖ Almanaques (se houver dados)")
    else:
        print("   ‚ö†Ô∏è Almanaques (n√£o h√° dados no banco)")
    
    if total_quadros_acesso > 0:
        print("   ‚úÖ Quadros de Acesso (se houver dados)")
    else:
        print("   ‚ö†Ô∏è Quadros de Acesso (n√£o h√° dados no banco)")
    
    if total_quadros_fixacao > 0:
        print("   ‚úÖ Quadros de Fixa√ß√£o (se houver dados)")
    else:
        print("   ‚ö†Ô∏è Quadros de Fixa√ß√£o (n√£o h√° dados no banco)")
    
    print("\n   üîç PR√ìXIMOS PASSOS:")
    print("   1. Acesse: http://127.0.0.1:8000/militares/")
    print("   2. Clique nos menus: Almanaques, Quadros de Acesso, Quadros de Fixa√ß√£o")
    print("   3. Se n√£o aparecer dados, pode ser que n√£o existam no banco")
    print("   4. Tente Ctrl+F5 para for√ßar recarregamento do navegador")
    
    print("\n   üéâ SISTEMA CORRIGIDO COM SUCESSO!")

if __name__ == "__main__":
    limpar_cache_final() 