#!/usr/bin/env python
"""
Script para verificar as permiss√µes do usu√°rio atual
"""
import os
import sys
import django

# Configurar Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'sepromcbmepi.settings')
django.setup()

from django.contrib.auth.models import User
from militares.models import MembroComissao, ComissaoPromocao, FuncaoMilitar, Militar

def verificar_permissoes_usuario():
    print("üîç VERIFICA√á√ÉO DE PERMISS√ïES DO USU√ÅRIO\n")
    
    # Buscar usu√°rio Jos√© ERISMAN
    try:
        usuario = User.objects.get(username='490.083.823-34')
        print(f"üë§ Usu√°rio: {usuario.get_full_name()} ({usuario.username})")
    except User.DoesNotExist:
        print("‚ùå Usu√°rio n√£o encontrado")
        return
    
    # Verificar grupos
    grupos = usuario.groups.all()
    print(f"\nüìã Grupos:")
    for grupo in grupos:
        print(f"  - {grupo.name}")
    
    # Verificar fun√ß√µes militares
    funcoes = FuncaoMilitar.objects.filter(usuario=usuario, status='ATIVO')
    print(f"\nüéñÔ∏è Fun√ß√µes Militares Ativas:")
    for funcao in funcoes:
        print(f"  - {funcao.cargo_funcao.nome}")
    
    # Verificar membros de comiss√£o
    membros_comissao = MembroComissao.objects.filter(
        usuario=usuario,
        ativo=True
    ).select_related('comissao', 'cargo')
    
    print(f"\nüèõÔ∏è Membros de Comiss√£o:")
    for membro in membros_comissao:
        print(f"  - {membro.comissao.nome} ({membro.comissao.tipo})")
        print(f"    Cargo: {membro.cargo.nome if membro.cargo else 'N/A'}")
        print(f"    Ativo: {membro.ativo}")
        print(f"    Status da Comiss√£o: {membro.comissao.status}")
    
    # Verificar se √© presidente
    comissoes_ativas = ComissaoPromocao.objects.filter(status='ATIVA')
    print(f"\nüëë Verifica√ß√£o de Presid√™ncia:")
    for comissao in comissoes_ativas:
        if comissao.eh_presidente(usuario):
            print(f"  ‚úÖ Presidente da {comissao.nome} ({comissao.tipo})")
        else:
            print(f"  ‚ùå N√ÉO √© presidente da {comissao.nome} ({comissao.tipo})")
    
    # Verificar permiss√µes espec√≠ficas
    print(f"\nüîê Permiss√µes Espec√≠ficas:")
    
    # Verificar se pode assinar documentos de oficiais
    comissao_cpo = ComissaoPromocao.get_comissao_ativa_por_tipo('CPO')
    if comissao_cpo:
        pode_assinar_oficiais = comissao_cpo.pode_assinar_documento_oficial(usuario)
        print(f"  - Pode assinar documentos de oficiais: {pode_assinar_oficiais}")
    else:
        print(f"  - CPO n√£o encontrada")
    
    # Verificar se pode assinar documentos de pra√ßas
    comissao_cpp = ComissaoPromocao.get_comissao_ativa_por_tipo('CPP')
    if comissao_cpp:
        pode_assinar_pracas = comissao_cpp.pode_assinar_documento_praca(usuario)
        print(f"  - Pode assinar documentos de pra√ßas: {pode_assinar_pracas}")
    else:
        print(f"  - CPP n√£o encontrada")
    
    # Verificar acesso a quadros de fixa√ß√£o
    print(f"\nüìä Acesso a Quadros de Fixa√ß√£o:")
    
    # Verificar se tem cargo especial
    cargos_especiais = ['Diretor de Gest√£o de Pessoas', 'Chefe da Se√ß√£o de Promo√ß√µes']
    funcoes_especiais = funcoes.filter(cargo_funcao__nome__in=cargos_especiais)
    if funcoes_especiais.exists():
        print(f"  ‚úÖ Tem cargo especial: {[f.cargo_funcao.nome for f in funcoes_especiais]}")
    else:
        print(f"  ‚ùå N√ÉO tem cargo especial")
    
    # Verificar se √© membro de comiss√£o
    if membros_comissao.exists():
        tem_cpo = membros_comissao.filter(comissao__tipo='CPO').exists()
        tem_cpp = membros_comissao.filter(comissao__tipo='CPP').exists()
        print(f"  - Membro CPO: {tem_cpo}")
        print(f"  - Membro CPP: {tem_cpp}")
        
        if tem_cpo and tem_cpp:
            print(f"  ‚úÖ Pode acessar TODOS os quadros de fixa√ß√£o")
        elif tem_cpo:
            print(f"  ‚úÖ Pode acessar apenas quadros de OFICIAIS")
        elif tem_cpp:
            print(f"  ‚úÖ Pode acessar apenas quadros de PRACAS")
        else:
            print(f"  ‚ùå N√ÉO pode acessar quadros de fixa√ß√£o")
    else:
        print(f"  ‚ùå N√ÉO √© membro de nenhuma comiss√£o")

if __name__ == "__main__":
    verificar_permissoes_usuario() 