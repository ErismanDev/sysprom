#!/usr/bin/env python
"""
Script para criar fun√ß√µes espec√≠ficas detalhadas para CPO e CPP
"""
import os
import sys
import django
from datetime import date

# Configurar o Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'sepromcbmepi.settings')
django.setup()

from django.contrib.auth.models import User
from militares.models import UsuarioFuncao

def criar_funcoes_especificas_detalhadas():
    """Cria fun√ß√µes espec√≠ficas detalhadas para CPO e CPP"""
    
    # Buscar usu√°rio padr√£o
    try:
        usuario_padrao = User.objects.get(username='erisman')
        print(f"‚úÖ Usu√°rio padr√£o encontrado: {usuario_padrao.get_full_name()}")
    except User.DoesNotExist:
        print("‚ùå Usu√°rio 'erisman' n√£o encontrado!")
        return False
    
    # Lista de fun√ß√µes espec√≠ficas detalhadas
    funcoes_especificas = [
        # CPO - Comiss√£o de Promo√ß√µes de Oficiais
        {
            'nome_funcao': 'Presidente da CPO',
            'tipo_funcao': 'COMISSAO',
            'descricao': 'Presidente da Comiss√£o de Promo√ß√µes de Oficiais',
            'status': 'ATIVO'
        },
        {
            'nome_funcao': 'Membro Nato da CPO',
            'tipo_funcao': 'COMISSAO',
            'descricao': 'Membro nato da Comiss√£o de Promo√ß√µes de Oficiais',
            'status': 'ATIVO'
        },
        {
            'nome_funcao': 'Membro Efetivo da CPO',
            'tipo_funcao': 'COMISSAO',
            'descricao': 'Membro efetivo da Comiss√£o de Promo√ß√µes de Oficiais',
            'status': 'ATIVO'
        },
        {
            'nome_funcao': 'Secret√°rio da CPO',
            'tipo_funcao': 'COMISSAO',
            'descricao': 'Secret√°rio da Comiss√£o de Promo√ß√µes de Oficiais',
            'status': 'ATIVO'
        },
        {
            'nome_funcao': 'Suplente da CPO',
            'tipo_funcao': 'COMISSAO',
            'descricao': 'Membro suplente da Comiss√£o de Promo√ß√µes de Oficiais',
            'status': 'ATIVO'
        },
        
        # CPP - Comiss√£o de Promo√ß√µes de Pra√ßas
        {
            'nome_funcao': 'Presidente da CPP',
            'tipo_funcao': 'COMISSAO',
            'descricao': 'Presidente da Comiss√£o de Promo√ß√µes de Pra√ßas',
            'status': 'ATIVO'
        },
        {
            'nome_funcao': 'Membro Nato da CPP',
            'tipo_funcao': 'COMISSAO',
            'descricao': 'Membro nato da Comiss√£o de Promo√ß√µes de Pra√ßas',
            'status': 'ATIVO'
        },
        {
            'nome_funcao': 'Membro Efetivo da CPP',
            'tipo_funcao': 'COMISSAO',
            'descricao': 'Membro efetivo da Comiss√£o de Promo√ß√µes de Pra√ßas',
            'status': 'ATIVO'
        },
        {
            'nome_funcao': 'Secret√°rio da CPP',
            'tipo_funcao': 'COMISSAO',
            'descricao': 'Secret√°rio da Comiss√£o de Promo√ß√µes de Pra√ßas',
            'status': 'ATIVO'
        },
        {
            'nome_funcao': 'Suplente da CPP',
            'tipo_funcao': 'COMISSAO',
            'descricao': 'Membro suplente da Comiss√£o de Promo√ß√µes de Pra√ßas',
            'status': 'ATIVO'
        }
    ]
    
    print("üîß Criando fun√ß√µes espec√≠ficas detalhadas para CPO e CPP...")
    print("=" * 60)
    
    funcoes_criadas = 0
    funcoes_existentes = 0
    
    for funcao_info in funcoes_especificas:
        # Verificar se a fun√ß√£o j√° existe para este usu√°rio
        funcao_existente = UsuarioFuncao.objects.filter(
            usuario=usuario_padrao,
            nome_funcao=funcao_info['nome_funcao']
        ).first()
        
        if funcao_existente:
            print(f"‚ö†Ô∏è  Fun√ß√£o j√° existe: {funcao_info['nome_funcao']}")
            funcoes_existentes += 1
        else:
            # Criar a fun√ß√£o associada ao usu√°rio padr√£o
            nova_funcao = UsuarioFuncao.objects.create(
                usuario=usuario_padrao,
                nome_funcao=funcao_info['nome_funcao'],
                tipo_funcao=funcao_info['tipo_funcao'],
                descricao=funcao_info['descricao'],
                status=funcao_info['status'],
                data_inicio=date.today(),
                observacoes='Fun√ß√£o criada automaticamente via script'
            )
            
            print(f"‚úÖ Fun√ß√£o criada: {nova_funcao.nome_funcao} ({nova_funcao.get_tipo_funcao_display()})")
            funcoes_criadas += 1
    
    print("=" * 60)
    print(f"üìä Resumo:")
    print(f"   - Fun√ß√µes criadas: {funcoes_criadas}")
    print(f"   - Fun√ß√µes j√° existentes: {funcoes_existentes}")
    print(f"   - Total processado: {len(funcoes_especificas)}")
    
    # Mostrar fun√ß√µes de comiss√£o organizadas
    print(f"\nüìã Fun√ß√µes de comiss√£o dispon√≠veis:")
    
    # CPO
    print(f"\n   üéñÔ∏è  Comiss√£o de Promo√ß√µes de Oficiais (CPO):")
    funcoes_cpo = UsuarioFuncao.objects.filter(
        nome_funcao__icontains='CPO'
    ).order_by('nome_funcao')
    
    for funcao in funcoes_cpo:
        print(f"     - {funcao.nome_funcao}")
    
    # CPP
    print(f"\n   üéñÔ∏è  Comiss√£o de Promo√ß√µes de Pra√ßas (CPP):")
    funcoes_cpp = UsuarioFuncao.objects.filter(
        nome_funcao__icontains='CPP'
    ).order_by('nome_funcao')
    
    for funcao in funcoes_cpp:
        print(f"     - {funcao.nome_funcao}")
    
    return True

if __name__ == '__main__':
    sucesso = criar_funcoes_especificas_detalhadas()
    
    print("\n" + "=" * 60)
    if sucesso:
        print("‚úÖ Fun√ß√µes espec√≠ficas criadas com sucesso!")
        print("\nüìù Fun√ß√µes dispon√≠veis:")
        print("   CPO:")
        print("     - Presidente da CPO")
        print("     - Membro Nato da CPO")
        print("     - Membro Efetivo da CPO")
        print("     - Secret√°rio da CPO")
        print("     - Suplente da CPO")
        print("   CPP:")
        print("     - Presidente da CPP")
        print("     - Membro Nato da CPP")
        print("     - Membro Efetivo da CPP")
        print("     - Secret√°rio da CPP")
        print("     - Suplente da CPP")
    else:
        print("‚ùå Processo falhou!")
        print("   Verifique os erros acima e tente novamente.") 