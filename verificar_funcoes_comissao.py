#!/usr/bin/env python
"""
Script para verificar as fun√ß√µes de comiss√£o do usu√°rio
"""

import os
import sys
import django

# Configurar Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'sepromcbmepi.settings')
django.setup()

from django.contrib.auth.models import User
from militares.models import UsuarioFuncao

def verificar_funcoes_comissao():
    """Verifica as fun√ß√µes de comiss√£o do usu√°rio"""
    
    print("üîç VERIFICANDO FUN√á√ïES DE COMISS√ÉO")
    print("=" * 50)
    
    # Buscar usu√°rio superusu√°rio
    usuario = User.objects.filter(is_superuser=True).first()
    if not usuario:
        print("‚ùå Nenhum superusu√°rio encontrado!")
        return
    
    print(f"üë§ Usu√°rio: {usuario.get_full_name() or usuario.username}")
    print()
    
    # Verificar todas as fun√ß√µes do usu√°rio
    funcoes = UsuarioFuncao.objects.filter(usuario=usuario, status='ATIVO')
    
    if funcoes.exists():
        print("üìã TODAS AS FUN√á√ïES ATIVAS:")
        for funcao in funcoes:
            print(f"   ‚úÖ {funcao.cargo_funcao.nome} (Status: {funcao.status})")
        print()
        
        # Verificar fun√ß√µes de comiss√£o
        funcoes_comissao = funcoes.filter(cargo_funcao__nome__in=['CPO', 'CPP'])
        
        if funcoes_comissao.exists():
            print("üë• FUN√á√ïES DE COMISS√ÉO:")
            for funcao in funcoes_comissao:
                print(f"   ‚úÖ {funcao.cargo_funcao.nome} (Status: {funcao.status})")
            print()
            
            print("üö® PROBLEMA IDENTIFICADO:")
            print("   - Voc√™ tem fun√ß√£o de comiss√£o (CPO/CPP)")
            print("   - A view quadro_fixacao_vagas_update tem verifica√ß√£o de membro de comiss√£o")
            print("   - Mas tamb√©m pode estar sendo afetado por decorators que verificam fun√ß√µes")
            print()
            
            # Verificar se h√° decorators que bloqueiam fun√ß√µes de comiss√£o
            print("üîç VERIFICANDO DECORATORS:")
            print("   - @cargos_especiais_required: ‚úÖ Deveria permitir (superusu√°rio)")
            print("   - Verifica√ß√£o adicional na view: ‚ùå Pode estar bloqueando")
            print()
            
            print("üí° SOLU√á√ïES:")
            print("   1. Modificar a view para dar prioridade ao superusu√°rio")
            print("   2. Remover a verifica√ß√£o de comiss√£o para superusu√°rios")
            print("   3. Adicionar verifica√ß√£o de superusu√°rio antes da verifica√ß√£o de comiss√£o")
            
        else:
            print("‚úÖ N√ÉO tem fun√ß√µes de comiss√£o")
            print("   - O problema pode estar em outro lugar")
            
    else:
        print("‚ùå Nenhuma fun√ß√£o ativa encontrada")
    
    print()
    print("=" * 50)

if __name__ == "__main__":
    verificar_funcoes_comissao() 