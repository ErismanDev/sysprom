# Generated by Django 5.2.3 on 2025-07-14 23:15

from django.db import migrations, models
import django.db.models.deletion


def criar_cargo_padrao(apps, schema_editor):
    """Criar cargo padrão para funções existentes"""
    CargoFuncao = apps.get_model('militares', 'CargoFuncao')
    UsuarioFuncao = apps.get_model('militares', 'UsuarioFuncao')
    
    # Buscar ou criar cargo padrão
    cargo_padrao, _ = CargoFuncao.objects.get_or_create(
        nome="Função Padrão",
        defaults={
            'descricao': 'Cargo criado automaticamente durante migração',
            'ativo': True,
            'ordem': 0
        }
    )
    
    # Atualizar todas as funções existentes
    UsuarioFuncao.objects.filter(cargo_funcao__isnull=True).update(cargo_funcao=cargo_padrao)


def reverse_criar_cargo_padrao(apps, schema_editor):
    """Reverter a criação do cargo padrão"""
    CargoFuncao = apps.get_model('militares', 'CargoFuncao')
    CargoFuncao.objects.filter(nome="Função Padrão").delete()


def remover_funcoes_duplicadas(apps, schema_editor):
    """Remove funções duplicadas (usuario, cargo_funcao, data_inicio) mantendo apenas uma"""
    UsuarioFuncao = apps.get_model('militares', 'UsuarioFuncao')
    from collections import defaultdict
    agrupados = defaultdict(list)
    for funcao in UsuarioFuncao.objects.all():
        chave = (funcao.usuario_id, funcao.cargo_funcao_id, funcao.data_inicio)
        agrupados[chave].append(funcao)
    for chave, funcoes in agrupados.items():
        if len(funcoes) > 1:
            # Mantém a primeira, remove as demais
            for funcao in funcoes[1:]:
                funcao.delete()


class Migration(migrations.Migration):

    dependencies = [
        ('militares', '0069_cargofuncao'),
    ]

    operations = [
        # 2. Adicionar campo cargo_funcao como nullable
        migrations.AddField(
            model_name='usuariofuncao',
            name='cargo_funcao',
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to='militares.cargofuncao',
                verbose_name='Cargo/Função'
            ),
        ),
        # 3. Migrar dados existentes
        migrations.RunPython(criar_cargo_padrao, reverse_criar_cargo_padrao),
        # 4. Remover duplicados
        migrations.RunPython(remover_funcoes_duplicadas),
        # 5. Tornar o campo obrigatório
        migrations.AlterField(
            model_name='usuariofuncao',
            name='cargo_funcao',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to='militares.cargofuncao',
                verbose_name='Cargo/Função'
            ),
        ),
        # 6. Atualizar unique_together
        migrations.AlterUniqueTogether(
            name='usuariofuncao',
            unique_together={('usuario', 'cargo_funcao', 'data_inicio')},
        ),
        # 7. Remover o campo nome_funcao
        migrations.RemoveField(
            model_name='usuariofuncao',
            name='nome_funcao',
        ),
    ]
