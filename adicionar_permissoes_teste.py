#!/usr/bin/env python
"""
Script para adicionar permiss√µes de teste para os novos m√≥dulos
"""

import os
import sys
import django

# Configurar Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'sepromcbmepi.settings')
django.setup()

from militares.models import CargoFuncao, PermissaoFuncao

def adicionar_permissoes_teste():
    """Adiciona permiss√µes de teste para os novos m√≥dulos"""
    
    print("üîß ADICIONANDO PERMISS√ïES DE TESTE")
    print("=" * 60)
    
    # Buscar o cargo de teste
    cargo = CargoFuncao.objects.filter(nome__icontains='teste').first()
    if not cargo:
        print("‚ùå Cargo de teste n√£o encontrado")
        return
    
    print(f"‚úÖ Cargo encontrado: {cargo.nome}")
    
    # Novos m√≥dulos para adicionar permiss√µes
    novos_modulos = [
        'ALMANAQUES',
        'CALENDARIOS', 
        'NOTIFICACOES',
        'MODELOS_ATA',
        'CARGOS_COMISSAO',
        'QUADROS_FIXACAO',
        'ASSINATURAS',
        'ESTATISTICAS',
        'EXPORTACAO',
        'IMPORTACAO',
        'BACKUP',
        'AUDITORIA',
        'DASHBOARD',
        'BUSCA',
        'AJAX',
        'API',
        'SESSAO',
        'FUNCAO',
        'PERFIL',
        'SISTEMA'
    ]
    
    # Tipos de acesso para adicionar
    acessos = ['VISUALIZAR', 'CRIAR', 'EDITAR']
    
    # Contar permiss√µes existentes
    permissoes_existentes = PermissaoFuncao.objects.filter(cargo_funcao=cargo).count()
    print(f"üìä Permiss√µes existentes: {permissoes_existentes}")
    
    # Adicionar permiss√µes para novos m√≥dulos
    permissoes_criadas = 0
    for modulo in novos_modulos:
        for acesso in acessos:
            # Verificar se j√° existe
            permissao_existente = PermissaoFuncao.objects.filter(
                cargo_funcao=cargo,
                modulo=modulo,
                acesso=acesso
            ).first()
            
            if not permissao_existente:
                permissao = PermissaoFuncao.objects.create(
                    cargo_funcao=cargo,
                    modulo=modulo,
                    acesso=acesso,
                    ativo=True
                )
                permissoes_criadas += 1
                print(f"   ‚úÖ Criada permiss√£o: {modulo} - {acesso}")
    
    # Contar permiss√µes finais
    permissoes_finais = PermissaoFuncao.objects.filter(cargo_funcao=cargo).count()
    
    print("=" * 60)
    print(f"üìä Permiss√µes criadas: {permissoes_criadas}")
    print(f"üìä Total de permiss√µes: {permissoes_finais}")
    print("üéÆ Agora acesse /militares/cargos/1/ para ver os novos m√≥dulos!")

if __name__ == "__main__":
    adicionar_permissoes_teste() 