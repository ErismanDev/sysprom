#!/usr/bin/env python3
"""
Script para corrigir migra√ß√µes do CKEditor para django-ckeditor-5
"""

import os
import re
import glob

def corrigir_migracoes_ckeditor():
    """Corrige migra√ß√µes que ainda usam ckeditor_uploader"""
    
    # Padr√µes para encontrar e substituir
    padroes = [
        (r'import ckeditor_uploader\.fields', 'from django_ckeditor_5.fields import CKEditor5Field'),
        (r'ckeditor_uploader\.fields\.RichTextUploadingField', 'CKEditor5Field'),
        (r'ckeditor_uploader\.fields\.RichTextField', 'CKEditor5Field'),
    ]
    
    # Encontrar todas as migra√ß√µes
    migracoes = glob.glob('militares/migrations/*.py')
    
    corrigidas = 0
    
    for migracao in migracoes:
        if os.path.basename(migracao) == '__init__.py':
            continue
            
        try:
            with open(migracao, 'r', encoding='utf-8') as f:
                conteudo = f.read()
            
            conteudo_original = conteudo
            
            # Aplicar corre√ß√µes
            for padrao, substituicao in padroes:
                conteudo = re.sub(padrao, substituicao, conteudo)
            
            # Se houve mudan√ßas, salvar o arquivo
            if conteudo != conteudo_original:
                with open(migracao, 'w', encoding='utf-8') as f:
                    f.write(conteudo)
                print(f"‚úì Corrigida: {migracao}")
                corrigidas += 1
                
        except Exception as e:
            print(f"‚úó Erro ao processar {migracao}: {e}")
    
    print(f"\nTotal de migra√ß√µes corrigidas: {corrigidas}")
    return corrigidas

def verificar_imports_ckeditor():
    """Verifica se h√° imports problem√°ticos nos modelos"""
    
    arquivos = [
        'militares/models.py',
        'militares/forms.py',
        'militares/admin.py'
    ]
    
    problemas = []
    
    for arquivo in arquivos:
        if os.path.exists(arquivo):
            try:
                with open(arquivo, 'r', encoding='utf-8') as f:
                    conteudo = f.read()
                
                if 'ckeditor_uploader' in conteudo:
                    problemas.append(arquivo)
                    
            except Exception as e:
                print(f"Erro ao verificar {arquivo}: {e}")
    
    if problemas:
        print("‚ö†Ô∏è  Arquivos com imports problem√°ticos do ckeditor_uploader:")
        for problema in problemas:
            print(f"   - {problema}")
    else:
        print("‚úì Todos os arquivos est√£o usando django-ckeditor-5 corretamente")
    
    return problemas

if __name__ == '__main__':
    print("üîß Corrigindo migra√ß√µes do CKEditor...")
    print("=" * 50)
    
    # Verificar imports nos modelos
    problemas = verificar_imports_ckeditor()
    
    print("\n" + "=" * 50)
    
    # Corrigir migra√ß√µes
    corrigidas = corrigir_migracoes_ckeditor()
    
    print("\n" + "=" * 50)
    
    if corrigidas > 0 or problemas:
        print("‚ö†Ô∏è  Recomenda√ß√µes:")
        print("   1. Execute 'python manage.py makemigrations' para verificar")
        print("   2. Execute 'python manage.py migrate' para aplicar as mudan√ßas")
        print("   3. Teste o sistema localmente antes do deploy")
    else:
        print("‚úÖ Todas as migra√ß√µes est√£o corretas!") 