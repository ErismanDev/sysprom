#!/usr/bin/env python
"""
Script para corrigir problemas de encoding nos nomes dos cargos
"""

import os
import sys
import django

# Configurar Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'sepromcbmepi.settings')
django.setup()

from militares.models import CargoFuncao
from django.db import transaction

def corrigir_encoding_cargos():
    """
    Corrige problemas de encoding nos nomes dos cargos
    """
    print("üîß Corrigindo problemas de encoding nos nomes dos cargos...")
    print("=" * 60)
    
    # Mapeamento de corre√ß√µes
    correcoes = {
        'Secret√ürio da CPO': 'Secret√°rio da CPO',
        'Secret√ürio da CPP': 'Secret√°rio da CPP',
        'Chefe da Se√æ√ío de Pessoal': 'Chefe da Se√ß√£o de Pessoal',
        'Chefe da Se√æ√ío de Promo√æ¬ßes': 'Chefe da Se√ß√£o de Promo√ß√µes',
        'Diretor de Gest√ío de Pessoas': 'Diretor de Gest√£o de Pessoas',
        'Gestor de Promo√æ¬ßes': 'Gestor de Promo√ß√µes',
        'Membro de Comiss√ío': 'Membro de Comiss√£o',
        'Usu√ürio': 'Usu√°rio'
    }
    
    print("üìã Corre√ß√µes necess√°rias:")
    for nome_errado, nome_correto in correcoes.items():
        print(f"   ‚Ä¢ '{nome_errado}' ‚Üí '{nome_correto}'")
    
    print("\nüîÑ Iniciando corre√ß√µes...")
    
    with transaction.atomic():
        for nome_errado, nome_correto in correcoes.items():
            try:
                cargo = CargoFuncao.objects.get(nome=nome_errado)
                cargo.nome = nome_correto
                cargo.save()
                print(f"‚úÖ Corrigido: '{nome_errado}' ‚Üí '{nome_correto}'")
            except CargoFuncao.DoesNotExist:
                print(f"‚ö†Ô∏è  Cargo n√£o encontrado: '{nome_errado}'")
            except Exception as e:
                print(f"‚ùå Erro ao corrigir '{nome_errado}': {e}")
    
    print("\n‚úÖ Corre√ß√µes conclu√≠das!")
    
    # Verifica√ß√£o final
    print("\nüîç Verifica√ß√£o final dos cargos:")
    todos_cargos = CargoFuncao.objects.all().order_by('nome')
    for cargo in todos_cargos:
        print(f"   ‚Ä¢ {cargo.nome}")
    
    # Verificar se ainda h√° problemas
    cargos_problematicos = CargoFuncao.objects.filter(
        nome__regex=r'[√Ä-√ø]'
    )
    
    if cargos_problematicos.exists():
        print(f"\n‚ö†Ô∏è  Ainda existem {cargos_problematicos.count()} cargos com caracteres especiais:")
        for cargo in cargos_problematicos:
            print(f"   ‚Ä¢ {cargo.nome}")
    else:
        print("\n‚úÖ Todos os problemas de encoding foram corrigidos!")

def main():
    """
    Fun√ß√£o principal
    """
    corrigir_encoding_cargos()

if __name__ == '__main__':
    main() 