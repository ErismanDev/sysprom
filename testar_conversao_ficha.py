#!/usr/bin/env python
import os
import sys
import django

# Configurar Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'sepromcbmepi.settings')
django.setup()

from militares.models import Militar, FichaConceitoPracas, FichaConceitoOficiais

def testar_conversao_ficha():
    """Testa a funcionalidade de convers√£o autom√°tica de ficha de pra√ßas para oficiais"""
    
    print("=== TESTE DE CONVERS√ÉO AUTOM√ÅTICA DE FICHA ===\n")
    
    # Buscar um militar com ficha de pra√ßas
    militar_com_ficha_pracas = None
    
    # Tentar encontrar um militar com ficha de pra√ßas
    ficha_pracas = FichaConceitoPracas.objects.first()
    if ficha_pracas:
        militar_com_ficha_pracas = ficha_pracas.militar
        print(f"‚úÖ Militar encontrado com ficha de pra√ßas: {militar_com_ficha_pracas.nome_completo}")
        print(f"   Posto atual: {militar_com_ficha_pracas.get_posto_graduacao_display()}")
        print(f"   Quadro atual: {militar_com_ficha_pracas.get_quadro_display()}")
        print(f"   ID da ficha de pra√ßas: {ficha_pracas.id}")
    else:
        print("‚ùå Nenhuma ficha de pra√ßas encontrada no sistema!")
        return
    
    # Verificar se o militar j√° tem ficha de oficiais
    if militar_com_ficha_pracas.fichaconceitooficiais_set.exists():
        print("‚ö†Ô∏è  Militar j√° possui ficha de oficiais!")
        return
    
    # Simular mudan√ßa de quadro de pra√ßas para oficiais
    print(f"\nüîÑ Simulando mudan√ßa de quadro: PRACAS -> COMP")
    print(f"   Posto anterior: {militar_com_ficha_pracas.posto_graduacao}")
    print(f"   Quadro anterior: {militar_com_ficha_pracas.quadro}")
    
    # Salvar dados anteriores
    posto_anterior = militar_com_ficha_pracas.posto_graduacao
    quadro_anterior = militar_com_ficha_pracas.quadro
    
    # Alterar para quadro de oficiais
    militar_com_ficha_pracas.quadro = 'COMP'
    militar_com_ficha_pracas.posto_graduacao = '2T'
    
    print(f"   Novo posto: {militar_com_ficha_pracas.posto_graduacao}")
    print(f"   Novo quadro: {militar_com_ficha_pracas.quadro}")
    
    # Salvar para acionar a convers√£o autom√°tica
    militar_com_ficha_pracas.save()
    
    # Verificar se a convers√£o foi realizada
    print(f"\nüìã Verificando convers√£o...")
    
    # Verificar se ainda existe ficha de pra√ßas
    ficha_pracas_atual = militar_com_ficha_pracas.fichaconceitopracas_set.first()
    if ficha_pracas_atual:
        print(f"‚ùå Ficha de pra√ßas ainda existe: {ficha_pracas_atual.id}")
    else:
        print(f"‚úÖ Ficha de pra√ßas foi removida")
    
    # Verificar se foi criada ficha de oficiais
    ficha_oficiais = militar_com_ficha_pracas.fichaconceitooficiais_set.first()
    if ficha_oficiais:
        print(f"‚úÖ Ficha de oficiais criada: {ficha_oficiais.id}")
        print(f"   Observa√ß√µes: {ficha_oficiais.observacoes}")
        print(f"   Pontos: {ficha_oficiais.pontos}")
    else:
        print(f"‚ùå Ficha de oficiais n√£o foi criada")
    
    # Restaurar dados originais para n√£o afetar o sistema
    print(f"\nüîÑ Restaurando dados originais...")
    militar_com_ficha_pracas.quadro = quadro_anterior
    militar_com_ficha_pracas.posto_graduacao = posto_anterior
    militar_com_ficha_pracas.save()
    
    print(f"‚úÖ Teste conclu√≠do!")

if __name__ == "__main__":
    testar_conversao_ficha() 