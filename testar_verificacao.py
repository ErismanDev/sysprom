#!/usr/bin/env python
"""
Script para testar a verifica√ß√£o de autenticidade
"""

import os
import sys
import django
from pathlib import Path

# Configurar Django
BASE_DIR = Path(__file__).resolve().parent
sys.path.append(str(BASE_DIR))
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'sepromcbmepi.settings')
django.setup()

from militares.models import QuadroAcesso, AtaSessao, VotoDeliberacao, QuadroFixacaoVagas

def testar_verificacao():
    """
    Testa a verifica√ß√£o de autenticidade com documentos existentes
    """
    print("üß™ TESTANDO VERIFICA√á√ÉO DE AUTENTICIDADE\n")
    
    # Testar Quadro de Acesso
    print("üìã Testando Quadro de Acesso:")
    quadros = QuadroAcesso.objects.all()[:3]
    for quadro in quadros:
        codigo_verificador = f"{quadro.pk:08d}"
        codigo_crc = f"{hash(str(quadro.pk)) % 0xFFFFFFF:07X}"
        print(f"  ID: {quadro.pk}")
        print(f"  C√≥digo Verificador: {codigo_verificador}")
        print(f"  C√≥digo CRC: {codigo_crc}")
        print(f"  Tipo: {quadro.get_tipo_display()}")
        print()
    
    # Testar Ata de Sess√£o
    print("üìÑ Testando Ata de Sess√£o:")
    atas = AtaSessao.objects.all()[:3]
    for ata in atas:
        codigo_verificador = f"{ata.pk:08d}"
        codigo_crc = f"{hash(str(ata.pk)) % 0xFFFFFFF:07X}"
        print(f"  ID: {ata.pk}")
        print(f"  C√≥digo Verificador: {codigo_verificador}")
        print(f"  C√≥digo CRC: {codigo_crc}")
        print(f"  Sess√£o: {ata.sessao.numero}")
        print()
    
    # Testar Voto de Delibera√ß√£o
    print("üó≥Ô∏è Testando Voto de Delibera√ß√£o:")
    votos = VotoDeliberacao.objects.all()[:3]
    for voto in votos:
        codigo_verificador = f"{voto.pk:08d}"
        codigo_crc = f"{hash(str(voto.pk)) % 0xFFFFFFF:07X}"
        print(f"  ID: {voto.pk}")
        print(f"  C√≥digo Verificador: {codigo_verificador}")
        print(f"  C√≥digo CRC: {codigo_crc}")
        try:
            print(f"  Militar: {voto.membro.militar.nome_completo}")
        except:
            print(f"  Militar: N/A")
        print()
    
    # Testar Quadro de Fixa√ß√£o de Vagas
    print("üìã Testando Quadro de Fixa√ß√£o de Vagas:")
    quadros_fixacao = QuadroFixacaoVagas.objects.all()[:3]
    for quadro in quadros_fixacao:
        codigo_verificador = f"{quadro.pk:08d}"
        codigo_crc = f"{hash(str(quadro.pk)) % 0xFFFFFFF:07X}"
        print(f"  ID: {quadro.pk}")
        print(f"  C√≥digo Verificador: {codigo_verificador}")
        print(f"  C√≥digo CRC: {codigo_crc}")
        print(f"  Tipo: {quadro.get_tipo_display()}")
        print()
    
    print("‚úÖ Teste conclu√≠do!")
    print("\nüîó URL de Verifica√ß√£o: http://127.0.0.1:8000/militares/verificar-autenticidade/")
    print("üìù Use os c√≥digos acima para testar a verifica√ß√£o")

if __name__ == "__main__":
    testar_verificacao() 